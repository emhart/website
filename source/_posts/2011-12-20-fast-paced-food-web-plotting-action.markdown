---
layout: post
title: "Fast paced food-web plotting action"
date: 2011-12-20
comments: false
categories:
 - ggplot2
 - food webs
 - code example
 - R
---

<div class='post'>
<table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: right; margin-left: 1em; text-align: right;"><tbody><tr><td style="text-align: center;"><a href="http://3.bp.blogspot.com/-i9k5-RWs4I4/TvESg66De1I/AAAAAAAAC5w/S2ym77TX968/s1600/Slide1.png" imageanchor="1" style="clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;"><img border="0" height="180" src="http://3.bp.blogspot.com/-i9k5-RWs4I4/TvESg66De1I/AAAAAAAAC5w/S2ym77TX968/s200/Slide1.png" width="200" /></a></td></tr><tr><td class="tr-caption" style="text-align: center;">A simple foodweb</td></tr></tbody></table>One of my interests is in food web topology and food web dynamics.  My research in experimental ponds has left me with 2430 food webs to make sense of, and one way to facilitate understanding that many networks, and really any food web, is through visualization.  There are fancy ways to visualize large webs such as <a href="http://peacelab.cloudapp.net/index_page/wow2.html">FoodWeb3D</a>, but  A). I usually don't have huge webs, and B). I've become a died in the wool ggplot2 convert, so I wanted to be able to create plots using ggplot2. What I needed was a function that would return a ggplot2 object that was a barebones plot of my web.  Before I get into the details of the plotting function, it's worth a few moments to go over what a food web diagram looks like and what it visualizes. &nbsp;Each point is a species and each line is saying that one species eats the other. &nbsp;The diagram on the right is a visualization of an S x S square matrix containing 1's and 0's where S is the number of species and a 1 in a column means that the species in column number <i>x</i> eats the species in row number <i>y</i>. &nbsp;The central task is how do I take that square matrix and convert it to ordered points and then plot it?  The first job is simply to create a set of nodes, and to do this I wrote a function where the input was the number of points you want, and it returns that number evenly spaced along the unit circle. <br /><pre class="brush:python" name="code"><br />########## support function create.xy<br />########## returns regularly spaced circular coordinates for the size <br />########## of your web<br /><br />create.xy <- function(po){<br />  degs <- seq(0,2*pi,by=(2*pi/(po)))<br /> return(cbind(cos(degs),sin(degs)))<br />}<br /></pre><br /><table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: left; margin-right: 1em; text-align: left;"><tbody><tr><td style="text-align: center;"><a href="http://2.bp.blogspot.com/-RwYTJdpjdDM/TvEZbhfKykI/AAAAAAAAC54/1gqn8LiErz4/s1600/Rplot08.png" imageanchor="1" style="clear: left; margin-bottom: 1em; margin-left: auto; margin-right: auto;"><img border="0" height="200" src="http://2.bp.blogspot.com/-RwYTJdpjdDM/TvEZbhfKykI/AAAAAAAAC54/1gqn8LiErz4/s200/Rplot08.png" width="200" /></a></td></tr><tr><td class="tr-caption" style="text-align: center;">Network diagram with color!</td></tr></tbody></table>The actual plotting function works by looping through each column of the matrix and determining which points have 1's (indicating consumption) and then repeating <i>xy</i> coordinates for the consuming node (species) in a matrix, and then creating a matrix of <i>xy</i> coordinates of the nodes consumed.  A tricky part is that these two matrices need to be combined into a single data frame and properly ordered.  I achieve this by indexing each point in the consumer matrix with an odd number, and each point in the consumed species matrix with an even number.  Then after combining the two different matrices, I can order them by the index and convert it to a data frame object so ggplot2 can plot them.  On top of the matrix of 1's and 0's the function requires a series of color labels for each consumer node.  It can be all black, but it allows for plots with different colors such as the one at right. I've used the convention of red for predator links and green for herbivory links, but you could use whatever colors. &nbsp;One problem is that if there are lots of reciprocal links (Species A eats B, but B also eats A) and each has their own color, then the colors will mix in the figure (red and blue become purple in the above case), so be wary of using too many colors.   <br /><table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: right; text-align: right;"><tbody><tr><td style="text-align: center;"><a href="http://2.bp.blogspot.com/-KelXmPFUv-w/TvEcqDC8QHI/AAAAAAAAC6A/v3uBm7CiW2g/s1600/StableSeries.png" imageanchor="1" style="clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;"><img border="0" height="200" src="http://2.bp.blogspot.com/-KelXmPFUv-w/TvEcqDC8QHI/AAAAAAAAC6A/v3uBm7CiW2g/s200/StableSeries.png" width="200" /></a></td></tr><tr><td class="tr-caption" style="text-align: center;">A time series of food webs</td></tr></tbody></table>&nbsp; I also stripped each plot of any labels and axes, this is easy enough to modify in the code where I call ggplot.  Other things like adding line weights for interactions strengths, arrows for directionality, etc can all be modified within the ggplot options. &nbsp;One of the most flexible parts for me was that the function returns a ggplot2 object which I can then use to create series of plots. &nbsp;For instance I'm looking at food web dynamics within my ponds so like to visualize a time series of webs. &nbsp;Using the arrange() function with a list of ggplot2 objects I can easily do this. The function will also return the raw data frame that can be used for any other plotting you might want to do. You can see a <a href="https://gist.github.com/1503428">Gist of all the code here</a>, or <a href="https://github.com/emhart/Misc_Func/blob/master/foodwebplot.R">add to it on the github page</a>. Here are some more examples of plots below.  Note that as the number of species increases the webs become impossible to discern, such as the 249 species <a href="http://peacelab.cloudapp.net/FoodWebsdotOrg/marinetro.jpg">Caribbean food-web</a><br /><br /><br /><center><br /><table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: right; margin-left: 1em; text-align: center;"><tbody><tr><td style="text-align: center;"><a href="http://4.bp.blogspot.com/-2LJccAX3xeU/TvEirj5t4DI/AAAAAAAAC6I/n3Nicq19txE/s1600/20x20nichemodel.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="150" src="http://4.bp.blogspot.com/-2LJccAX3xeU/TvEirj5t4DI/AAAAAAAAC6I/n3Nicq19txE/s200/20x20nichemodel.png" width="150" /></a></td><td style="text-align: center;"><a href="http://1.bp.blogspot.com/-itILAD2sCpE/TvEis6zfk9I/AAAAAAAAC6Q/7wzIOZbP1zs/s1600/bascweb.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="150" src="http://1.bp.blogspot.com/-itILAD2sCpE/TvEis6zfk9I/AAAAAAAAC6Q/7wzIOZbP1zs/s200/bascweb.png" width="150" /></a></td><td style="text-align: center;"><a href="http://3.bp.blogspot.com/-JV93o-_DLpU/TvEiweGJk0I/AAAAAAAAC6Y/sbQaSEHAFRU/s1600/40x40plot.png" imageanchor="1" style="clear: left; margin-bottom: 1em; margin-left: auto; margin-right: auto;"><img border="0" height="150" src="http://3.bp.blogspot.com/-JV93o-_DLpU/TvEiweGJk0I/AAAAAAAAC6Y/sbQaSEHAFRU/s200/40x40plot.png" width="150" /></a></td></tr><tr><td class="tr-caption" style="text-align: center;">20 species niche model</td><td class="tr-caption" style="text-align: center;">249 species web, Bascompte et al 2005 </td><td class="tr-caption" style="text-align: center;">40 species random web</td> </tr></tbody></table></center></div>
