---
layout: post
title: "MDTools 0.0.2"
date: 2014-02-20
comments: true
categories: [python, xml, software, metadata]
---

Back in December I had the opportunity to go to an [iDigBio](https://www.idigbio.org/) hackathon.  While there I worked on some code to add [EML metadata](http://knb.ecoinformatics.org/software/eml/eml-2.1.1/) to Darwin Core Archives.  I was hoping to do this, and was looking around for an easy way to create metadata in Python, hoping for something like the [EML package for R.](https://github.com/ropensci/EML) <!-- more --> Unfortunately I had no such luck and went down the rabbit hole of making my own tool for this purpose.  I've finally completed it, and called it MDTools.  It's a general purpose metadata module that makes creating XML metadata easy(ier?).  I've written some extensive documentation over on [the project webpage](http://neondps.github.io/MDTools/) that you can peruse.  The module is up on [pypi](https://pypi.python.org/pypi/MDTools/0.0.2) for easy installation via `pip`, and the source is of course [available over on github](https://github.com/NEONdps/MDTools).

Currently the module is very flexible and ideally would serve as a dependency for people hoping to create standard specific packages, like a python version of the EML package.  The structure of elements is easy enough to create with a bit of python to extract data from a specific source, and create metadata objects that can be written out to XML.  Alternatively, it accepts a flat file format input that individual users can write, and then easily read in the files to create metadata objects.  So what should I change?  What should I add?  Is this a poor man's [PyXB](http://pyxb.sourceforge.net/)?
